
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры




&НаСервере
Процедура СохранитьНастройки()
      
	  Об =РеквизитФормыВЗначение("Объект");
	  Об.НастройкаЗагрузки=Новый ХранилищеЗначения(ТаблицаРеквизитов.Выгрузить());
	  Об.Записать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика   
	ЗагрузитьНастройки();
	ПрочитатьПоляВыбора();
КонецПроцедуры 

&НаСервере
Процедура ЗагрузитьНастройки()
   	  ТЗ= РеквизитФормыВЗначение("Объект").НастройкаЗагрузки.Получить();
	Если ТЗ<>Неопределено Тогда 
		Для Каждого Ст из ТЗ цикл
		 ЗаполнитьТип(Ст);	
		Конеццикла;	
       ТаблицаРеквизитов.Загрузить(ТЗ);  
	   КонецЕсли;
КонецПроцедуры

 &НаСервере
 Процедура ПрочитатьПоляВыбора() 
	ТабДокумент = РеквизитФормыВЗначение("Объект").Получитьмакет("Макет");
	ТЗ =ПреобразоватьТабличныйДокументВТаблицуЗначений(ТабДокумент); 
	ДеревоР=ТаблицаЗначенийВДеревоЗначений(ТЗ,"НаименованиеОбъекта");
	ЗначениеВДанныеФормы(ДеревоР,ДеревоРеквизитов);//	Сообщить(ТЗ);
КонецПроцедуры

 &НаСервере
Функция ТаблицаЗначенийВДеревоЗначений(ТЗ, ГруппировкаКолонка) Экспорт 
   ПЗ             = Новый ПостроительЗапроса;
   ПЗ.ИсточникДанных          = Новый ОписаниеИсточникаДанных(ТЗ);//передаем ТЗ

   ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
   ПЗ.ИсточникДанных.Колонки[ГруппировкаКолонка].Измерение = Истина;//по этой колонке идет группировка

   ПЗ.ЗаполнитьНастройки();
   ПЗ.Выполнить();
   Дерево = ПЗ.Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);  
   Возврат Дерево;  
КонецФункции// ТаблицаЗначенийВДеревоЗначений

&НаСервере  
Функция ПреобразоватьТабличныйДокументВТаблицуЗначений(ТабДокумент)

    ПоследняяСтрока = ТабДокумент.ВысотаТаблицы;

    ПоследняяКолонка = ТабДокумент.ШиринаТаблицы;

    ОбластьЯчеек = ТабДокумент.Область(1, 1, ПоследняяСтрока, ПоследняяКолонка);

    // Создаем описание источника данных на основании области ячеек табличного документа.

    ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);

    // Создаем объект для интеллектуального построения отчетов,

    // указываем источник данных и выполняем построение отчета.

    ПостроительОтчета = Новый ПостроительОтчета;

    ПостроительОтчета.ИсточникДанных = ИсточникДанных;

    ПостроительОтчета.Выполнить();

    // Результат выгружаем в таблицу значений.

    ТабЗначений = ПостроительОтчета.Результат.Выгрузить();

    Возврат ТабЗначений

КонецФункции

&НаСервере
Процедура ДеревоРеквизитовВыборНаСервере()
	// Вставить содержимое обработчика. 
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ДеревоРеквизитовВыборНаСервере();  
			ПараметрыОтбора=Новый Структура;
		ПараметрыОтбора.Вставить("Реквизит",Элемент.ТекущиеДанные.Реквизит);
		Если ТаблицаРеквизитов.НайтиСтроки(ПараметрыОтбора).Количество()=0 тогда
			НоваяСтрокаРеквизитов =ТаблицаРеквизитов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаРеквизитов, Элемент.ТекущиеДанные);
			ТаблицаРеквизитов.Сортировать("ПорядокРеквизитов");	
		КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТип(НовСт)
	Если ЗначениеЗаполнено(НовСт.тип)тогда
		НовСт.ОписаниеТипов= НОвый ОписаниеТипов(НовСт.тип);	
	КонецЕсли;	
КонецПроцедуры




&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	//Вставить содержимое обработчика 
	СохранитьНастройки();
КонецПроцедуры

&НаСервере
Процедура ДополнитьОбязательныеРеквизитыНаСервере()
	// Вставить содержимое обработчика.
	 ДеревоЗначений  = РеквизитФормыВЗначение("ДеревоРеквизитов");
	 Для Каждого ГруппаРеквизитов из ДеревоЗначений.Строки цикл
		 Для Каждого Реквизит из ГруппаРеквизитов.Строки цикл
			 Если Реквизит.ОбязательныйРеквизит="1" тогда
				ПараметрыОтбора=Новый Структура;
				ПараметрыОтбора.Вставить("Реквизит",Реквизит.Реквизит);
				Если ТаблицаРеквизитов.НайтиСтроки(ПараметрыОтбора).Количество()=0 тогда
					НоваяСтрокаРеквизитов =ТаблицаРеквизитов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаРеквизитов, Реквизит);
				КонецЕсли;	
				 //Сообщить(Реквизит.Реквизит);
			КонецЕсли;	 
			 //Сообщить(ГруппаРеквизитов);
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьОбязательныеРеквизиты(Команда)
	ДополнитьОбязательныеРеквизитыНаСервере();
КонецПроцедуры


//Вобщем, чтобы записать в хранилище таблицу значений
//тз=новый ТаблицаЗначений;
//    тз=ТемпературныйЛист.Выгрузить();
//    ЭтотОбъект = РеквизитФормыВЗначение("Объект");
//   //Сообщить(ТипЗнч(ЭтотОбъект.Хранилище.Получить()));
// 
//    ЭтотОбъект.Хранилище = Новый ХранилищеЗначения(тз);
//    ЭтотОбъект.Записать();

//Тз-спецально создаю, ибо если в хранилище запихивать реквизит ТемпературныйЛист, то потом при получении оказывается, что хранилище пустое

//Получаю значение из хранилища и присваиваю содержимое ТемпературныйЛист

//ЭтотОбъект = РеквизитФормыВЗначение("Объект");      
//    Если ТипЗнч(ЭтотОбъект.Хранилище.Получить())=тип("ТаблицаЗначений") Тогда
//        д=ЭтотОбъект.Хранилище.Получить();
//        ТемпературныйЛист.Загрузить(д);         
//    КонецЕсли; 
