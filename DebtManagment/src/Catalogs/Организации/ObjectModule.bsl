#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события "ОбработкаПроверкиЗаполнения".
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	ТекстСообщения = "";
	МассивНепроверяемыхРеквизитов = Новый Массив;
	

	Если Не ЭтоНовый() Тогда
		ЗначенияКодовВИнформационнойБазе = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Новый Структура("ИНН,КПП,ОГРН,КодПоОКПО, ЮрФизЛицо"));
	КонецЕсли;

	Если Не ПустаяСтрока(ИНН) 
		И (ЭтоНовый() Или ЗначенияКодовВИнформационнойБазе.ИНН <> ИНН ИЛИ ЗначенияКодовВИнформационнойБазе.ЮрФизЛицо <> ЮрФизЛицо)
		И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ЭтоЮрЛицо(ЮрФизЛицо), ТекстСообщения) Тогда

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ИНН",, Отказ);

	КонецЕсли;

	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		
		Если Не ПустаяСтрока(КПП) 
			И (ЭтоНовый() Или ЗначенияКодовВИнформационнойБазе.КПП <> КПП)
			И Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(КПП, ТекстСообщения) Тогда

			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "КПП",, Отказ);

		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(КодПоОКПО) И НЕ РегламентированныеДанныеКлиентСервер.КодПоОКПОСоответствуетТребованиям(КодПоОКПО, ЭтоЮрЛицо(ЮрФизЛицо),ТекстСообщения) Тогда
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,"КодПоОКПО",,Отказ);
		
	КонецЕсли;
		
	Если Не ПустаяСтрока(ОГРН) 
		И (ЭтоНовый() Или ЗначенияКодовВИнформационнойБазе.ОГРН <> ОГРН)
		И Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ОГРН, ЭтоЮрЛицо(ЮрФизЛицо), ТекстСообщения) Тогда

		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ОГРН",, Отказ);

	КонецЕсли;
	
	Если ОбособленноеПодразделение Тогда
		Если ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
			Если Ссылка = ГоловнаяОрганизация Тогда
				ТекстСообщения = НСтр("ru = 'Головная организация не может совпадать с обособленным подразделением'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ГоловнаяОрганизация", , Отказ);
			Иначе
				СтруктураГоловной = Новый Структура;
				СтруктураГоловной.Вставить("ИНН");
				СтруктураГоловной.Вставить("КПП");
				ПараметрыГоловной = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ГоловнаяОрганизация, СтруктураГоловной);
				Если ПараметрыГоловной.ИНН = ИНН Тогда
					Если ПараметрыГоловной.КПП = КПП Тогда
						ТекстСообщения = НСтр("ru = 'КПП головной организации не может совпадать с КПП обособленного подразделения'");
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ГоловнаяОрганизация", , Отказ);
					КонецЕсли;
				Иначе
					ТекстСообщения = НСтр("ru = 'ИНН головной организации должен совпадать с ИНН обособленного подразделения'");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ГоловнаяОрганизация", , Отказ);
				КонецЕсли;
				
				Если НЕ ЭтоНовый() И ЕстьОбособленныеПодразделенияОрганизации() Тогда
					ТекстСообщения = НСтр("ru = 'Организация не может быть обособленным подразделением, потому что она уже выбрана в качестве головной для других организаций.'");
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ГоловнаяОрганизация");
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;

	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
	 ИЛИ ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда

		Если Не ПустаяСтрока(КПП) Тогда
			КПП = "";
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(СвидетельствоДатаВыдачи) Тогда
			СвидетельствоДатаВыдачи = Дата(1,1,1);
		КонецЕсли;
		
		Если Не ПустаяСтрока(СвидетельствоСерияНомер) Тогда
			СвидетельствоСерияНомер = ""
		КонецЕсли;

	КонецЕсли;
	
	КПП = СокрЛП(КПП);
	ИНН = СокрЛП(ИНН);

КонецПроцедуры // ПередЗаписью()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// По переданному значению перечисления ЮрФизЛицо определяет, является ли оно признаком ЮрЛица.
//
// Параметры:
//  ЮрФизЛицо  -   Перечисления.ЮрФизЛицо.
// Возвращаемое значение:
//   Булево   - Истина, если юридическое лицо, Ложь если нет.
//
Функция ЭтоЮрЛицо(ЮрФизЛицо) 

	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо ИЛИ ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
		Возврат Истина;
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо ИЛИ ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции // ЭтоЮрЛицо()

// Проверяет наличие обособленных подразделений у текущей организации.
//
Функция ЕстьОбособленныеПодразделенияОрганизации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Ссылка
	|	И Организации.Ссылка <> Организации.ГоловнаяОрганизация";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли
