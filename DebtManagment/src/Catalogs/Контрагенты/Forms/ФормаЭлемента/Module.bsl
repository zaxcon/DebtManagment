
&НаСервере
Процедура ДобавитьАдресНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьАдрес(Команда)
	ДобавитьАдресНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЮридическийАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, Модифицированность, СтандартнаяОбработка);

КонецПроцедуры


&НаСервере
Процедура РазместитьКонтактнуюИнформацию()
	
		ИсторияЮрАдреса = НСтр("ru = 'История'");
	
	//СсылкаДляПереходаНаКарту = УправлениеКонтактнойИнформациейБП.СтрокаСсылкиПоказатьНаКарте();
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ИсключаемыеВиды = Новый Массив;
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента);
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.ФаксКонтрагенты);
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты);
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагенты);
	
	ПараметрыРазмещенияКонтактнойИнформации = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ПараметрыРазмещенияКонтактнойИнформации.ИмяЭлементаДляРазмещения = "ГруппаКомпоновкиКонтактнойИнформации";
	ПараметрыРазмещенияКонтактнойИнформации.ИсключаемыеВиды = ИсключаемыеВиды;
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, ПараметрыРазмещенияКонтактнойИнформации);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	//
	ЮрФактАдресаСовпадают		= СокрЛП(КонтактнаяИнформацияПолеЮрАдресКонтрагента) = СокрЛП(КонтактнаяИнформацияПолеФактАдресКонтрагента);
	ЮрПочтовыйАдресаСовпадают	= СокрЛП(КонтактнаяИнформацияПолеЮрАдресКонтрагента) = СокрЛП(КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента)
		ИЛИ СокрЛП(?(КонтактнаяИнформацияПолеЮрАдресКонтрагента = УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки(),
		"", КонтактнаяИнформацияПолеЮрАдресКонтрагента)) = СокрЛП(КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента);
	//
КонецПроцедуры

      &НаСервере
Функция СтатическиеРеквизиты()
	
	СтатическиеРеквизиты = Новый Массив();
	
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации);
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.ФаксОрганизации);
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации);
	СтатическиеРеквизиты.Добавить(Справочники.ВидыКонтактнойИнформации.УчредительныйАдресИностраннойОрганизации);
	
	Возврат СтатическиеРеквизиты;

КонецФункции
 &НаСервере
Процедура ПрочитатьКонтактнуюИнформацию(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	УстановитьДополнительныеСвойстваКонтактнойИнформации();
	
КонецПроцедуры


&НаСервере
Процедура УстановитьДополнительныеСвойстваКонтактнойИнформации()
	
	//Если ЭтоФизЛицо Тогда
	//	ЮрФактАдресаСовпадают = Истина;
	//Иначе
	//	ЮрФактАдресаСовпадают = СокрЛП(КонтактнаяИнформацияПолеЮрАдресОрганизации) = СокрЛП(КонтактнаяИнформацияПолеФактАдресОрганизации);
	//КонецЕсли;
	//
	//ЮрПочтовыйАдресаСовпадают = СокрЛП(КонтактнаяИнформацияПолеЮрАдресОрганизации) = СокрЛП(КонтактнаяИнформацияПолеПочтовыйАдресОрганизации)
	//	ИЛИ СокрЛП(?(КонтактнаяИнформацияПолеЮрАдресОрганизации = УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки(),
	//	"", КонтактнаяИнформацияПолеЮрАдресОрганизации)) = СокрЛП(КонтактнаяИнформацияПолеПочтовыйАдресОрганизации);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика 
	РазместитьКонтактнуюИнформацию(); 
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПрочитатьКонтактнуюИнформацию(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеЮрАдресКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, Модифицированность, СтандартнаяОбработка, ПараметрыОткрытия);

КонецПроцедуры
// &НаКлиенте
//Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
//	
//	ОбновитьКонтактнуюИнформацию(Результат);
//	
//КонецПроцедуры
//  &НаСервере
//Процедура ОбновитьКонтактнуюИнформацию(Результат)
//	
//	Если Результат.Свойство("ИмяРеквизита") Тогда
//		ПослеИзмененияКонтактнойИнформации(Результат.ИмяРеквизита);
//	КонецЕсли;
//	
//	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
//	
//КонецПроцедуры
 &НаСервере
Процедура ПослеИзмененияКонтактнойИнформации(ИмяРеквизита)
	
	Если ИмяРеквизита = "КонтактнаяИнформацияПолеЮрАдресКонтрагента" Тогда
		
		
			//сообщить(1);
    

		ПриИзмененииЮрАдресаКонтрагента(ЭтотОбъект);
		
		//УправлениеКонтактнойИнформациейБП.УстановитьАктуальноеЗначениеИсторииИзмененийАдреса(
		//	ЭтотОбъект,
		//	Элементы.КонтактнаяИнформацияПолеЮрАдресКонтрагента);
		//УправлениеФормой(ЭтотОбъект);
		
	ИначеЕсли ИмяРеквизита = "КонтактнаяИнформацияПолеФактАдресКонтрагента" Тогда
		
		ПриИзмененииФактАдресаКонтрагента(ЭтотОбъект);
		УправлениеФормой(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры    

//&НаКлиенте
//Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
//	
//	МодульУправлениеКонтактнойИнформациейКлиент =
//			ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
//	МодульУправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
//	
//КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииЮрАдресаКонтрагента(Форма)

	Если Форма.ЮрФактАдресаСовпадают ИЛИ ПустаяСтрока(Форма.КонтактнаяИнформацияПолеФактАдресКонтрагента) Тогда
		СкопироватьПолеКонтактнойИнформации(Форма, "КонтактнаяИнформацияПолеФактАдресКонтрагента", "КонтактнаяИнформацияПолеЮрАдресКонтрагента");
	КонецЕсли;
	
	Если Форма.ЮрПочтовыйАдресаСовпадают ИЛИ ПустаяСтрока(Форма.КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента) Тогда
		СкопироватьПолеКонтактнойИнформации(Форма, "КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента", "КонтактнаяИнформацияПолеЮрАдресКонтрагента");
	КонецЕсли;
	
	УправлениеФормой(Форма);
	
КонецПроцедуры
 &НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииФактАдресаКонтрагента(Форма)
	
	Форма.ЮрФактАдресаСовпадают = СокрЛП(Форма.КонтактнаяИнформацияПолеЮрАдресКонтрагента) = СокрЛП(Форма.КонтактнаяИнформацияПолеФактАдресКонтрагента);
	Форма.ЮрПочтовыйАдресаСовпадают = СокрЛП(Форма.КонтактнаяИнформацияПолеЮрАдресКонтрагента) = СокрЛП(Форма.КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента);
	
КонецПроцедуры                    


&НаКлиентеНаСервереБезКонтекста
Процедура СкопироватьПолеКонтактнойИнформации(Форма, ИмяПриемника, ИмяИсточника)
	
	Форма.Модифицированность = Истина;
	Форма[ИмяПриемника] = Форма[ИмяИсточника];
	
	ИмяОписания = "КонтактнаяИнформацияОписаниеДополнительныхРеквизитов";
	
	Отбор = Новый Структура("ИмяРеквизита");
	
	Отбор.ИмяРеквизита = ИмяИсточника;
	ДанныеИсточника = Форма[ИмяОписания].НайтиСтроки(Отбор);
	Если ДанныеИсточника.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отбор.ИмяРеквизита = ИмяПриемника;
	ДанныеПриемника = Форма[ИмяОписания].НайтиСтроки(Отбор);
	Если ДанныеПриемника.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеИсточника[0].Тип = ДанныеПриемника[0].Тип Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПриемника[0].Значение = ДанныеИсточника[0].Значение;
	ДанныеПриемника[0].Представление = ДанныеИсточника[0].Представление;
	ДанныеПриемника[0].Комментарий = ДанныеИсточника[0].Комментарий;
	
КонецПроцедуры

 &НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	//
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	
	// Группа Адреса, телефоны
	Элементы.КонтактнаяИнформацияПолеФактАдресКонтрагента.Видимость = НЕ Форма.ЮрФактАдресаСовпадают;
	Элементы.ФактАдресКонтрагентаСовпадает.Видимость                = Форма.ЮрФактАдресаСовпадают;
//	Элементы.ФактАдресПереходНаКарту.Видимость                      = НЕ Форма.ЮрФактАдресаСовпадают;
	
	Элементы.КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента.Видимость = НЕ Форма.ЮрПочтовыйАдресаСовпадают;
	Элементы.ПочтовыйАдресКонтрагентаСовпадает.Видимость                = Форма.ЮрПочтовыйАдресаСовпадают;
	//Элементы.ПочтовыйАдресПереходНаКарту.Видимость                      = НЕ Форма.ЮрПочтовыйАдресаСовпадают;
	// 
	Если Объект.ЮрФизЛицо=ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") тогда
		Элементы.ГруппаЮЛ.Видимость=Истина;
		Элементы.ГруппаИПФЛ.Видимость=Ложь;   
		Элементы.КонтактнаяИнформацияПолеЮрАдресКонтрагента.Заголовок ="Юридический адрес";
		Элементы.КонтактнаяИнформацияПолеФактАдресКонтрагента.Заголовок ="Фактический адрес"; 
		Элементы.ЮрФактАдресаСовпадают.Заголовок ="Совпадает с юр. адресом";
		Элементы.ЮрПочтовыйАдресаСовпадают.Заголовок ="Совпадает с юр. адресом";    
		
		//Элементы.ФактАдресКонтрагентаСовпадает.Заголовок ="Факт адрес контрагента совпадает";
		//Элементы.ПочтовыйАдресКонтрагентаСовпадает.Заголовок ="Почтовый адрес контрагента совпадает";
	КонецЕсли;	  
	Если Объект.ЮрФизЛицо=ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель")  тогда
		Элементы.ГруппаЮЛ.Видимость=Ложь;
		Элементы.ГруппаИПФЛ.Видимость=Истина;   
		Элементы.КонтактнаяИнформацияПолеЮрАдресКонтрагента.Заголовок ="Адрес прописки";
		Элементы.КонтактнаяИнформацияПолеФактАдресКонтрагента.Заголовок ="Адрес местонахождения"; 
		Элементы.ЮрФактАдресаСовпадают.Заголовок ="Совпадает с адр. прописки";
		Элементы.ЮрПочтовыйАдресаСовпадают.Заголовок ="Совпадает с адр. прописки";
		//Элементы.ФактАдресКонтрагентаСовпадает.Заголовок ="Факт адрес контрагента совпадает";
		//Элементы.ПочтовыйАдресКонтрагентаСовпадает.Заголовок ="Почтовый адрес контрагента совпадает";


	КонецЕсли;	   
	Если Объект.ЮрФизЛицо=ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо")  тогда
		Элементы.ГруппаЮЛ.Видимость=Ложь;
		Элементы.ГруппаИПФЛ.Видимость=Истина;  
		Элементы.ГруппаИП.Видимость=Ложь;
       	Элементы.КонтактнаяИнформацияПолеЮрАдресКонтрагента.Заголовок ="Адрес прописки";
		Элементы.КонтактнаяИнформацияПолеФактАдресКонтрагента.Заголовок ="Адрес местонахождения";
        Элементы.ЮрФактАдресаСовпадают.Заголовок ="Совпадает с адр. прописки";
		Элементы.ЮрПочтовыйАдресаСовпадают.Заголовок ="Совпадает с адр. прописки";


	КонецЕсли;
	//Если ПустаяСтрока(Форма.КонтактнаяИнформацияПолеФактАдресКонтрагента)
	//	ИЛИ Форма.КонтактнаяИнформацияПолеФактАдресКонтрагента = УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки() Тогда
	//		Форма.ФактАдресКонтрагентаСовпадает = НСтр("ru = '<не заполнен>'");
	//		Элементы.ФактАдресПереходНаКарту.Доступность = Ложь;
	//Иначе
	//	Форма.ФактАдресКонтрагентаСовпадает = Форма.КонтактнаяИнформацияПолеФактАдресКонтрагента;
	//	Элементы.ФактАдресПереходНаКарту.Доступность = Истина;
	//КонецЕсли;
	//
	//Если ПустаяСтрока(Форма.КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента)
	//	ИЛИ Форма.КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента = УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки() Тогда
	//		Форма.ПочтовыйАдресКонтрагентаСовпадает = НСтр("ru = '<не заполнен>'");
	//		Элементы.ПочтовыйАдресПереходНаКарту.Доступность = Ложь;
	//Иначе
	//	Форма.ПочтовыйАдресКонтрагентаСовпадает = Форма.КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента;
	//	Элементы.ПочтовыйАдресПереходНаКарту.Доступность = Истина;
	//КонецЕсли;
	//
	//Если ПустаяСтрока(Форма.КонтактнаяИнформацияПолеЮрАдресКонтрагента)
	//	ИЛИ Форма.КонтактнаяИнформацияПолеЮрАдресКонтрагента = УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки() Тогда
	//	Элементы.ЮрАдресПереходНаКарту.Доступность = Ложь;
	//Иначе
	//	Элементы.ЮрАдресПереходНаКарту.Доступность = Истина;
	//КонецЕсли;
	
	//
	//АдресЗаголовок = НСтр("ru='Адрес и телефон'");
	//Если ЗначениеЗаполнено(Форма.КонтактнаяИнформацияПолеЮрАдресКонтрагента) И НЕ Форма.КонтактнаяИнформацияПолеЮрАдресКонтрагента = УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки() Тогда
	//	АдресЗаголовок = АдресЗаголовок + ": " + Форма.КонтактнаяИнформацияПолеЮрАдресКонтрагента;
	//	Если ЗначениеЗаполнено(Форма.КонтактнаяИнформацияПолеТелефонКонтрагента) Тогда
	//		АдресЗаголовок = АдресЗаголовок + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru=', тел: %1'"), Форма.КонтактнаяИнформацияПолеТелефонКонтрагента);
	//	КонецЕсли;
	//Иначе
	//	Если ЗначениеЗаполнено(Форма.КонтактнаяИнформацияПолеТелефонКонтрагента) Тогда
	//		АдресЗаголовок = АдресЗаголовок + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru=': тел: %1'"), Форма.КонтактнаяИнформацияПолеТелефонКонтрагента);
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Форма.Элементы.ГруппаКонтактнаяИнформация.ЗаголовокСвернутогоОтображения = АдресЗаголовок;
	//
	//БанковскиеСчетаФормыКлиентСервер.УстановитьЗаголовокГруппыРеквизитовСчета(Форма, Форма.БанковскийСчет);
	//
	//БанковскиеСчетаФормыКлиентСервер.ИзменитьДлинуНомераСчета(Форма, Форма.ЯвляетсяБанкомРФ);
	//
	//ВидимостьРеквизитовБанковскогоСчета(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеЮрАдресКонтрагентаПриИзменении(Элемент)
	Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент);
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

//&НаКлиенте
//Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
//	
//	УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
//	
//	УправлениеФормой(ЭтотОбъект);
//	
//КонецПроцедуры
   #Область ПроцедурыПодсистемыКонтактнаяИнформация

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка, ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка, ПараметрыОткрытия);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	
	Если Результат.Свойство("ИмяРеквизита") Тогда
		ПослеИзмененияКонтактнойИнформации(Результат.ИмяРеквизита);
	КонецЕсли;
	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.АвтоПодбор(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Вставить содержимое обработчика      
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект, Отказ);

КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеФактАдресКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
			ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, Модифицированность, СтандартнаяОбработка, ПараметрыОткрытия);


КонецПроцедуры

&НаКлиенте
Процедура ЮрФактАдресаСовпадаютПриИзменении(Элемент)
		
	Если ЮрФактАдресаСовпадают Тогда
		СкопироватьПолеКонтактнойИнформации(ЭтотОбъект, "КонтактнаяИнформацияПолеФактАдресКонтрагента", "КонтактнаяИнформацияПолеЮрАдресКонтрагента");
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	

КонецПроцедуры

&НаКлиенте
Процедура ЮрПочтовыйАдресаСовпадаютПриИзменении(Элемент)
		Если ЮрПочтовыйАдресаСовпадают Тогда
		СкопироватьПолеКонтактнойИнформации(ЭтотОбъект, "КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента", "КонтактнаяИнформацияПолеЮрАдресКонтрагента");
		
		Если КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента = УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки() Тогда
			КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента = "";
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеПочтовыйАдресКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.   
				ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, Модифицированность, СтандартнаяОбработка, ПараметрыОткрытия);



КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеТелефонКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, Модифицированность, СтандартнаяОбработка, ПараметрыОткрытия);

КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПолеEmailКонтрагентыПриИзменении(Элемент)
		Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	// Вставить содержимое обработчика. 
	 ВидПриИзмененииНаСервере();
КонецПроцедуры
&НаСервере
Процедура ВидПриИзмененииНаСервере()
	
	ПриИзмененииВидаКонтрагента();
	
	//ПроверитьИНН = Истина;
	//ПроверитьКПП = Истина;
	//
	//ПроверитьИННКППДубли(ПроверитьИНН, ПроверитьКПП);
	
	//УстановитьВидимостьЭлементов();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры
&НаСервере
Процедура ПриИзмененииВидаКонтрагента()
	//Если Вид = "ФизическоеЛицо" Тогда
	//	Объект.ЮридическоеФизическоеЛицо  = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	//	Объект.ИНН                        = ?(Объект.СтранаРегистрации = Справочники.СтраныМира.Россия, "", Объект.ИНН);
	//	Объект.КПП                        = "";
	//	Объект.ОбособленноеПодразделение  = Ложь;
	//	Объект.ГосударственныйОрган       = Ложь;
	//	Объект.Самозанятый                = Ложь;
	//	Объект.ВидГосударственногоОргана  = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
	//	Объект.КодГосударственногоОргана  = "";
	//	Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
	//		Объект.ГоловнойКонтрагент = Объект.Ссылка;
	//	КонецЕсли;
	//ИначеЕсли Вид = "Самозанятый" Тогда
	//	Объект.ЮридическоеФизическоеЛицо  = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	//	Объект.ИНН                        = ?(Объект.СтранаРегистрации = Справочники.СтраныМира.Россия, "", Объект.ИНН);
	//	Объект.КПП                        = "";
	//	Объект.ОбособленноеПодразделение  = Ложь;
	//	Объект.ГосударственныйОрган       = Ложь;
	//	Объект.Самозанятый                = Истина;
	//	Объект.ВидГосударственногоОргана  = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
	//	Объект.КодГосударственногоОргана  = "";
	//	Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
	//		Объект.ГоловнойКонтрагент = Объект.Ссылка;
	//	КонецЕсли;
	//ИначеЕсли Вид = "ОбособленноеПодразделение" Тогда
	//	Объект.ЮридическоеФизическоеЛицо        = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	//	Объект.ИНН                              = "";
	//	Объект.ДокументУдостоверяющийЛичность   = "";
	//	Объект.ОбособленноеПодразделение        = Истина;
	//	Объект.ГосударственныйОрган             = Ложь;
	//	Объект.Самозанятый                      = Ложь;
	//	Объект.ВидГосударственногоОргана        = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
	//	Объект.КодГосударственногоОргана        = "";
	//	Если Объект.ГоловнойКонтрагент = Объект.Ссылка Тогда
	//		Объект.ГоловнойКонтрагент = Неопределено;
	//	КонецЕсли;
	//ИначеЕсли Вид = "ГосударственныйОрган" Тогда
	//	Объект.ЮридическоеФизическоеЛицо        = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	//	Объект.ДокументУдостоверяющийЛичность   = "";
	//	Объект.ОбособленноеПодразделение        = Ложь;
	//	Объект.СтранаРегистрации                = Справочники.СтраныМира.Россия;
	//	Объект.ГосударственныйОрган             = Истина;
	//	Объект.Самозанятый                      = Ложь;
	//	Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
	//		Объект.ГоловнойКонтрагент = Объект.Ссылка;
	//	КонецЕсли;
	//Иначе
	//	Объект.ЮридическоеФизическоеЛицо        = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	//	Объект.ИНН                              = ?(Объект.СтранаРегистрации = Справочники.СтраныМира.Россия, "", Объект.ИНН);
	//	Объект.КПП                              = "";
	//	Объект.ДокументУдостоверяющийЛичность   = "";
	//	Объект.ОбособленноеПодразделение        = Ложь;
	//	Объект.ГосударственныйОрган             = Ложь;
	//	Объект.Самозанятый                      = Ложь;
	//	Объект.ВидГосударственногоОргана        = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
	//	Объект.КодГосударственногоОргана        = "";
	//	Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
	//		Объект.ГоловнойКонтрагент = Объект.Ссылка;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти
