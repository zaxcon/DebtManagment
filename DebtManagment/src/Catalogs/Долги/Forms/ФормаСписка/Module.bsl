
&НаКлиенте
Процедура Команда1(Команда)

	СчитаемИтогиНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
		НастройкиСписка = "...";//при первом вызове посчитаем
	ПодключитьОбработчикОжидания("ПроверкаИзменения",1);
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаИзменения()

	НастройкиСпискаТек = "";
	Для Каждого ЭлементПользНастроек Из	Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл

	Если ОбщийМодульПользовательский.ЕстьРеквизитИлиСвойствоОбъекта(ЭлементПользНастроек,"Использование") тогда	
		Если (ЭлементПользНастроек.Использование) тогда
		НастройкиСпискаТек = НастройкиСпискаТек + СокрЛП(ЭлементПользНастроек) + СокрЛП(Элементы.Список.Период.ДатаНачала) + СокрЛП(Элементы.Список.Период.ДатаОкончания);
		КонецЕсли;
	КонецЕсли;
	КонецЦикла;

	НастройкиСпискаТек = НастройкиСпискаТек + СокрЛП(Элементы.Список.Период.ДатаНачала) + СокрЛП(Элементы.Список.Период.ДатаОкончания);
	
	Если не НастройкиСписка = НастройкиСпискаТек Тогда	
	 
	 	//чей-то поменялось
		НастройкиСписка = НастройкиСпискаТек;
		
		СчитаемИтогиНаСервере();	
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)

Запрос = Новый Запрос;
Запрос.Текст =
	"ВЫБРАТЬ
	|	ДолгиДолжников.СтатусДолжника КАК СтатусДолжника,
	|	ДолгиДолжников.Долг КАК Долг,
	|	ДолгиДолжников.Должник КАК Должник
	|ИЗ
	|	РегистрСведений.ДолгиДолжников КАК ДолгиДолжников
	|ГДЕ
	|	ДолгиДолжников.Долг В (&СписокДолг)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатусДолжника
	|ИТОГИ
	|ПО
	|	Долг";

Запрос.УстановитьПараметр("СписокДолг", Строки.ПолучитьКлючи());

РезультатЗапроса = Запрос.Выполнить();

ВыборкаДолг = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

Пока ВыборкаДолг.Следующий() Цикл

	ВыборкаДетальныеЗаписи = ВыборкаДолг.Выбрать();
	ОписаниеДолжников="";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОписаниеДолжников = ОписаниеДолжников+?(ОписаниеДолжников="","",",")+ВыборкаДетальныеЗаписи.СтатусДолжника+":"
		+ВыборкаДетальныеЗаписи.Должник;
	
	КонецЦикла;
	СтрокаСписка=Строки[ВыборкаДолг.Долг];
	СтрокаСписка.Данные.Должник =ОписаниеДолжников;
КонецЦикла;


КонецПроцедуры




&НаСервере
Процедура СчитаемИтогиНаСервере()
	
	//получаем схему компоновки списка
	СКД = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	
	//добавляем ресурсы
	ПолеИтога = СКД.ПоляИтога.Добавить();
	ПолеИтога.ПутьКДанным 	= "СуммаЗадолженности";
	ПолеИтога.Выражение 	= "СУММА(СуммаЗадолженности)";
	
	ПолеИтога = СКД.ПоляИтога.Добавить();
	ПолеИтога.ПутьКДанным 	= "ССылка";
	ПолеИтога.Выражение 	= "Количество(ССылка)";
	
	
	//получаем настройки компоновки списка (в ней уже есть отборы и поиск)
	НастройкаСКД 	= Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	//нам не нужна вся таблица, а только итог
	//очищаем поля основной группировки - получаем в итоге группировку всего запроса по "неопределено" и на выходе одну строку в результате
	НастройкаСКД.Структура[0].ПоляГруппировки.Элементы.Очистить();
	
	//нам не нужны все поля, а только наши ресурсы
	НастройкаСКД.Структура[0].Выбор.Элементы.Очистить();
	Выб = НастройкаСКД.Структура[0].Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	Выб.Поле 			= Новый ПолеКомпоновкиДанных("СуммаЗадолженности");
	Выб.Использование 	= Истина;
	
		Выб = НастройкаСКД.Структура[0].Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	Выб.Поле 			= Новый ПолеКомпоновкиДанных("ССылка");
	Выб.Использование 	= Истина;

	//поехали за результатом
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СКД, НастройкаСКД,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")) ;
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
   
   	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//заполняем реквизиты итогов подвала
	ИтогоСуммаЗадолженности 	= Результат.Итог("СуммаЗадолженности");
	ИтогоКоличество 	= Результат.Итог("ССылка");
КонецПроцедуры