#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет банковский счет выбранного контрагента, организации или физического лица.
//
// Возвращает банковский счет получателя, если найден один банковский счет.
// Возвращает Неопределено, если банковский счет не найден или счетов больше одного.
//
// Параметры:
//  Получатель - СправочникСсылка.Контрагенты,
//               СправочникСсылка.ФизическиеЛица - Ссылка на получателя.
//               СправочникСсылка.Организация - Ссылка на организацию.
//
// Возвращаемое значение:
//	СправочникСсылка.БанковскиеСчета - Найденный банковский счет получателя.
//
Функция ПолучитьБанковскийСчетПоУмолчанию(Получатель, НайтиЛюбой = Ложь) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	БанковскиеСчета.Ссылка КАК БанковскийСчетПолучателя
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	НЕ БанковскиеСчета.ПометкаУдаления
	|	И БанковскиеСчета.Владелец = &Получатель
	|");
	
	Запрос.УстановитьПараметр("Получатель", Получатель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если Выборка.Количество() = 1 ИЛИ
			(Выборка.Количество() > 1 И НайтиЛюбой) Тогда
		БанковскийСчетПолучателя = Выборка.БанковскийСчетПолучателя;
	Иначе
		БанковскийСчетПолучателя = Справочники.БанковскиеСчета.ПустаяСсылка();
	КонецЕсли;
	
	Возврат БанковскийСчетПолучателя;

КонецФункции // ПолучитьБанковскийСчетПоУмолчанию()

// Получает реквизиты банковского счета.
//
// Параметры:
//  БанковскийСчет - СправочникСсылка.БанковскиеСчета - Ссылка на банковский счет.
//
// Возвращаемое значение:
//  Структура - Организация и валюта банковского счета.
//
Функция ПолучитьРеквизитыБанковскогоСчета(БанковскийСчет) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	БанковскиеСчета.Банк КАК Банк,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчета.БИКБанка
	|		ИНАЧЕ БанковскиеСчета.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчета.КоррСчетБанка
	|		ИНАЧЕ БанковскиеСчета.Банк.КоррСчет
	|	КОНЕЦ КАК КоррСчет,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.Владелец ССЫЛКА Справочник.Организации
	|			ТОГДА БанковскиеСчета.Владелец
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Ссылка = &БанковскийСчет");
	
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НомерСчета = Выборка.НомерСчета;
		Банк = Выборка.Банк;
		БИК = Выборка.БИК;
		КоррСчет = Выборка.КоррСчет;
		Организация = Выборка.Организация;
	Иначе
		НомерСчета = "";
		Банк = Неопределено;
		БИК = "";
		КоррСчет = "";
		Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("НомерСчета", НомерСчета);
	СтруктураРеквизитов.Вставить("Банк", Банк);
	СтруктураРеквизитов.Вставить("БИК", БИК);
	СтруктураРеквизитов.Вставить("КоррСчет", КоррСчет);
	СтруктураРеквизитов.Вставить("Организация", Организация);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
