#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

Процедура ОбновитьИНННеРезидента() Экспорт
	
	ИНННеРезидента = "000000000000";
	ЮрФизЛицоНеРезидент = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ИННПоставщикаУслуг <> &ИНННеРезидента
	|	И ДоговорыКонтрагентов.Агент.ЮрФизЛицо = &ЮрФизЛицоНеРезидент";
	
	Запрос.УстановитьПараметр("ИНННеРезидента", ИНННеРезидента);
	Запрос.УстановитьПараметр("ЮрФизЛицоНеРезидент", ЮрФизЛицоНеРезидент);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СправочникОбъект = Выборка.Ссылка.ПолучитьОБъект();
		СправочникОбъект.ИННПоставщикаУслуг = ИНННеРезидента;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДоговорыДляЗаполнениюСНО(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Агент.Удалить_СистемаНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.ПустаяСсылка)
		|	И ДоговорыКонтрагентов.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивДоговоров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивДоговоров);
	
КонецПроцедуры

Процедура ЗаполнитьСистемуНалогообложенияДоговоров(Параметры) Экспорт
	
	МетаданныеДоговоры = Метаданные.Справочники.ДоговорыКонтрагентов;
	ПолноеИмяОбъекта = МетаданныеДоговоры.ПолноеИмя();
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	ДоговорыДляОбработки = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		ДоговорыДляОбработки.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентов.Агент.Удалить_СистемаНалогообложения КАК СистемаНалогообложения
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка В(&ДоговорыДляОбработки)";
	
	Запрос.УстановитьПараметр("ДоговорыДляОбработки", ДоговорыДляОбработки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДоговоров = РезультатЗапроса.Выбрать();
	
	ШаблонТекстаОшибки = НСтр("ru = 'Не удалось установить систему налогообложения договору %1 по причине:
									|%2'");
	
	Пока ВыборкаДоговоров.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДоговоров.Договор);
			Блокировка.Заблокировать();
			
			ДоговорОбъект = ВыборкаДоговоров.Договор.ПолучитьОбъект();
			
			Если ДоговорОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ДоговорОбъект.СистемаНалогообложения = ВыборкаДоговоров.СистемаНалогообложения;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДоговорОбъект, Ложь);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтрШаблон(ШаблонТекстаОшибки, ВыборкаДоговоров.Договор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление информационной базы'",
				ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки);
			
		КонецПопытки;
			
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ПерезаполнитьБанковскийСчетОрганизации(Параметры) Экспорт
	
	МетаданныеДокумента = Метаданные.Справочники.ДоговорыКонтрагентов;
	ПолноеИмяОбъекта = МетаданныеДокумента.ПолноеИмя();
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение Тогда
		
		Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
		МодульОбновлениеИнформационнойБазыРТ = ОбщегоНазначения.ОбщийМодуль("ОбновлениеИнформационнойБазыРТ");
		МодульОбновлениеИнформационнойБазыРТ.ЗаполнитьБанковскийСчетОрганизацииОбъектов(ПолноеИмяОбъекта, "БанковскийСчет", Выборка, Параметры);
		
	#КонецЕсли
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКЗаполнениюБСО(Параметры) Экспорт
	
	МетаданныеДокумента = Метаданные.Справочники.ДоговорыКонтрагентов;
	ПолноеИмяОбъекта = МетаданныеДокумента.ПолноеИмя();
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение Тогда
		
		МодульОбновлениеИнформационнойБазыРТ = ОбщегоНазначения.ОбщийМодуль("ОбновлениеИнформационнойБазыРТ");
		ДокументыДляОбработки = МодульОбновлениеИнформационнойБазыРТ.ОбъектыДляЗаполненияБанковскогоСчетаОрганизации(ПолноеИмяОбъекта, "БанковскийСчет");
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ДокументыДляОбработки);
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
