
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ОстаткиДолгов Приход
        СформироватьДвиженияДолгиДолжников() ;
		СформироватьДвиженияОстаткиДолгов() ;
		СформироватьСтатусыРаботыСДолгом();
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура СформироватьДвиженияДолгиДолжников() 
		Движения.ДолгиДолжников.Записывать = Истина;
	Для Каждого ТекСтрокаДолжники Из Должники Цикл
		Движение = Движения.ДолгиДолжников.Добавить();
		Движение.Должник = ТекСтрокаДолжники.Должник;
		Движение.Долг = ТекСтрокаДолжники.Долг;
		Движение.СтатусДолжника = ТекСтрокаДолжники.СтатусДолжника;
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвиженияОстаткиДолгов() 
	
	     ТЗДолги=Должники.Выгрузить();
		 ТЗДолги.Свернуть("Долг,СуммаЗадолженности");
	Движения.ОстаткиДолгов.Записывать = Истина;
	Для Каждого ТекСтрокаДолжники Из ТЗДолги Цикл
		Движение = Движения.ОстаткиДолгов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Долг = ТекСтрокаДолжники.Долг;
		Движение.Сумма = ТекСтрокаДолжники.СуммаЗадолженности;
	КонецЦикла;
КонецПроцедуры	  


Процедура СформироватьСтатусыРаботыСДолгом() 
	Если ЗначениеЗаполнено(СтатусРаботыСДолгом) тогда
		ТЗДолги=Должники.Выгрузить();
		ТЗДолги.Свернуть("Долг");
		Движения.СтатусыРаботыСДолгом.Записывать = Истина;
		Для Каждого ТекСтрокаДолжники Из ТЗДолги Цикл
			Движение = Движения.СтатусыРаботыСДолгом.Добавить(); 
			Движение.Период = Дата;
			Движение.Долг = ТекСтрокаДолжники.Долг;
			Движение.Реестр=Ссылка;
			Движение.СтатусРаботыСДолгом = СтатусРаботыСДолгом;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры	